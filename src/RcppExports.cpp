// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Csel_dsnormal
Rcpp::NumericVector Csel_dsnormal(Rcpp::NumericVector LMP, Rcpp::NumericVector Sm);
RcppExport SEXP _fishblicc_Csel_dsnormal(SEXP LMPSEXP, SEXP SmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type LMP(LMPSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Sm(SmSEXP);
    rcpp_result_gen = Rcpp::wrap(Csel_dsnormal(LMP, Sm));
    return rcpp_result_gen;
END_RCPP
}
// Cpop_len
Rcpp::NumericVector Cpop_len(Rcpp::NumericVector node, Rcpp::NumericVector wt, Rcpp::NumericVector Len, Rcpp::NumericVector Zki, double Galpha, double Gbeta);
RcppExport SEXP _fishblicc_Cpop_len(SEXP nodeSEXP, SEXP wtSEXP, SEXP LenSEXP, SEXP ZkiSEXP, SEXP GalphaSEXP, SEXP GbetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type node(nodeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type wt(wtSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Len(LenSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Zki(ZkiSEXP);
    Rcpp::traits::input_parameter< double >::type Galpha(GalphaSEXP);
    Rcpp::traits::input_parameter< double >::type Gbeta(GbetaSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpop_len(node, wt, Len, Zki, Galpha, Gbeta));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_stan_fit4BLICC_mod();

static const R_CallMethodDef CallEntries[] = {
    {"_fishblicc_Csel_dsnormal", (DL_FUNC) &_fishblicc_Csel_dsnormal, 2},
    {"_fishblicc_Cpop_len", (DL_FUNC) &_fishblicc_Cpop_len, 6},
    {"_rcpp_module_boot_stan_fit4BLICC_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4BLICC_mod, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_fishblicc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
